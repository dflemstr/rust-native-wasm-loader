// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rust-native-wasm-loader loads a cargo-web project: dependencies 1`] = `
Set {
  "test/fixtures/mystdweblib/Cargo.toml",
  "test/fixtures/mystdweblib/src/main.rs",
  "test/fixtures/stdweb.js",
}
`;

exports[`rust-native-wasm-loader loads a cargo-web project: errors 1`] = `Array []`;

exports[`rust-native-wasm-loader loads a cargo-web project: output 1`] = `"Hello, World!"`;

exports[`rust-native-wasm-loader loads a cargo-web project: warnings 1`] = `Array []`;

exports[`rust-native-wasm-loader loads a simple cargo project with errors: dependencies 1`] = `
Set {
  "test/fixtures/error.js",
  "test/fixtures/myerrorlib/Cargo.toml",
  "test/fixtures/myerrorlib/src/lib.rs",
}
`;

exports[`rust-native-wasm-loader loads a simple cargo project with errors: errors 1`] = `
Array [
  "Module build failed: BuildError: Error: Command failed: cargo build --message-format=json --target=wasm32-unknown-unknown --release
   Compiling myerrorlib v0.1.0 (test/fixtures/myerrorlib)
error: Could not compile \`myerrorlib\`.

To learn more, run the command again with --verbose.
",
  "error: aborting due to previous error

",
  "error[E0277]: cannot add \`&str\` to \`{integer}\`
 --> src/lib.rs:2:7
  |
2 |     1 + \\"two\\"
  |       ^ no implementation for \`{integer} + &str\`
  |
  = help: the trait \`std::ops::Add<&str>\` is not implemented for \`{integer}\`

",
]
`;

exports[`rust-native-wasm-loader loads a simple cargo project with errors: failure 1`] = `"Module build failed: BuildError: Error: Command failed: cargo build --message-format=json --target=wasm32-unknown-unknown --release"`;

exports[`rust-native-wasm-loader loads a simple cargo project with errors: warnings 1`] = `Array []`;

exports[`rust-native-wasm-loader loads a simple cargo project with warnings: dependencies 1`] = `
Set {
  "test/fixtures/mywarninglib/Cargo.toml",
  "test/fixtures/mywarninglib/src/lib.rs",
  "test/fixtures/warning.js",
}
`;

exports[`rust-native-wasm-loader loads a simple cargo project with warnings: errors 1`] = `Array []`;

exports[`rust-native-wasm-loader loads a simple cargo project with warnings: output 1`] = `1`;

exports[`rust-native-wasm-loader loads a simple cargo project with warnings: warnings 1`] = `
Array [
  "warning: unused variable: \`b\`
 --> src/lib.rs:2:20
  |
2 | pub fn add(a: i32, b: i32) -> i32 { // Warning: unused variable b
  |                    ^ help: consider using \`_b\` instead
  |
  = note: #[warn(unused_variables)] on by default

",
]
`;

exports[`rust-native-wasm-loader loads a simple cargo project with wasm-gc: dependencies 1`] = `
Set {
  "test/fixtures/myrustlib/Cargo.toml",
  "test/fixtures/myrustlib/src/add.rs",
  "test/fixtures/myrustlib/src/lib.rs",
  "test/fixtures/simple.js",
}
`;

exports[`rust-native-wasm-loader loads a simple cargo project with wasm-gc: errors 1`] = `Array []`;

exports[`rust-native-wasm-loader loads a simple cargo project with wasm-gc: output 1`] = `3`;

exports[`rust-native-wasm-loader loads a simple cargo project with wasm-gc: warnings 1`] = `Array []`;

exports[`rust-native-wasm-loader loads a simple cargo project: dependencies 1`] = `
Set {
  "test/fixtures/myrustlib/Cargo.toml",
  "test/fixtures/myrustlib/src/add.rs",
  "test/fixtures/myrustlib/src/lib.rs",
  "test/fixtures/simple.js",
}
`;

exports[`rust-native-wasm-loader loads a simple cargo project: errors 1`] = `Array []`;

exports[`rust-native-wasm-loader loads a simple cargo project: output 1`] = `3`;

exports[`rust-native-wasm-loader loads a simple cargo project: warnings 1`] = `Array []`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support and a rust error: dependencies 1`] = `
Set {
  "node_modules/@types/node/index.d.ts",
  "node_modules/@types/node/inspector.d.ts",
  "node_modules/typescript/lib/lib.d.ts",
  "test/fixtures/mywasmbindgenerrorlib/src/lib.rs",
  "test/fixtures/wasmbindgen-rust-error.ts",
}
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support and a rust error: errors 1`] = `
Array [
  "[tsl] ERROR in test/fixtures/mywasmbindgenerrorlib/src/lib.rs.ts(1,17)
      TS2345: Argument of type '{ \\"killed\\": boolean; \\"code\\": number; \\"signal\\": null; \\"cmd\\": string; \\"stdout\\": string; \\"stderr\\": s...' is not assignable to parameter of type 'string'.",
  "[tsl] ERROR in test/fixtures/wasmbindgen-rust-error.ts(1,33)
      TS2306: File 'test/fixtures/mywasmbindgenerrorlib/src/lib.rs.ts' is not a module.",
  "Error: Command failed: cargo build --message-format=json --target=wasm32-unknown-unknown --release
   Compiling mywasmbindgenerrorlib v0.1.0 (test/fixtures/mywasmbindgenerrorlib)
error: Could not compile \`mywasmbindgenerrorlib\`.

To learn more, run the command again with --verbose.
",
  "error: aborting due to previous error

",
  "error[E0369]: binary operation \`+\` cannot be applied to type \`&str\`
help: \`to_owned()\` can be used to create an owned \`String\` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left
  |
1 | .to_owned()#![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  | ^^^^^^^^^^^

",
]
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support and a rust error: failure 1`] = `"[object Object]"`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support and a rust error: warnings 1`] = `Array []`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support and a type error: dependencies 1`] = `
Set {
  "node_modules/@types/node/index.d.ts",
  "node_modules/@types/node/inspector.d.ts",
  "node_modules/typescript/lib/lib.d.ts",
  "test/fixtures/mywasmbindgenlib/src/lib.rs",
  "test/fixtures/wasmbindgen-type-error.ts",
}
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support and a type error: errors 1`] = `
Array [
  "[tsl] ERROR in test/fixtures/mywasmbindgenlib/src/lib.rs.ts(1,17)
      TS2345: Argument of type '{ \\"killed\\": boolean; \\"code\\": number; \\"signal\\": null; \\"cmd\\": string; \\"stdout\\": string; \\"stderr\\": s...' is not assignable to parameter of type 'string'.",
  "[tsl] ERROR in test/fixtures/wasmbindgen-type-error.ts(1,33)
      TS2306: File 'test/fixtures/mywasmbindgenlib/src/lib.rs.ts' is not a module.",
  "Error: Command failed: cargo build --message-format=json --target=wasm32-unknown-unknown --release
   Compiling mywasmbindgenlib v0.1.0 (test/fixtures/mywasmbindgenlib)
error: Could not compile \`mywasmbindgenlib\`.

To learn more, run the command again with --verbose.
",
  "error: aborting due to 2 previous errors

",
  "error[E0635]: unknown feature \`wasm_custom_section\`
 --> src/lib.rs:1:24
  |
1 | #![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  |                        ^^^^^^^^^^^^^^^^^^^

",
  "error[E0635]: unknown feature \`wasm_import_module\`
 --> src/lib.rs:1:45
  |
1 | #![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  |                                             ^^^^^^^^^^^^^^^^^^

",
]
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support and a type error: failure 1`] = `"[object Object]"`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support and a type error: warnings 1`] = `
Array [
  "warning: the feature \`proc_macro\` has been stable since 1.29.0 and no longer requires an attribute to enable
 --> src/lib.rs:1:12
  |
1 | #![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  |            ^^^^^^^^^^
  |
  = note: #[warn(stable_features)] on by default

",
]
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support: dependencies 1`] = `
Set {
  "node_modules/@types/node/index.d.ts",
  "node_modules/@types/node/inspector.d.ts",
  "node_modules/typescript/lib/lib.d.ts",
  "test/fixtures/mywasmbindgenlib/src/lib.rs",
  "test/fixtures/wasmbindgen.ts",
}
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support: errors 1`] = `
Array [
  "[tsl] ERROR in test/fixtures/mywasmbindgenlib/src/lib.rs.ts(1,17)
      TS2345: Argument of type '{ \\"killed\\": boolean; \\"code\\": number; \\"signal\\": null; \\"cmd\\": string; \\"stdout\\": string; \\"stderr\\": s...' is not assignable to parameter of type 'string'.",
  "[tsl] ERROR in test/fixtures/wasmbindgen.ts(1,33)
      TS2306: File 'test/fixtures/mywasmbindgenlib/src/lib.rs.ts' is not a module.",
  "Error: Command failed: cargo build --message-format=json --target=wasm32-unknown-unknown --release
   Compiling mywasmbindgenlib v0.1.0 (test/fixtures/mywasmbindgenlib)
error: Could not compile \`mywasmbindgenlib\`.

To learn more, run the command again with --verbose.
",
  "error: aborting due to 2 previous errors

",
  "error[E0635]: unknown feature \`wasm_custom_section\`
 --> src/lib.rs:1:24
  |
1 | #![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  |                        ^^^^^^^^^^^^^^^^^^^

",
  "error[E0635]: unknown feature \`wasm_import_module\`
 --> src/lib.rs:1:45
  |
1 | #![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  |                                             ^^^^^^^^^^^^^^^^^^

",
]
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support: failure 1`] = `"[object Object]"`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project with typescript support: warnings 1`] = `
Array [
  "warning: the feature \`proc_macro\` has been stable since 1.29.0 and no longer requires an attribute to enable
 --> src/lib.rs:1:12
  |
1 | #![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  |            ^^^^^^^^^^
  |
  = note: #[warn(stable_features)] on by default

",
]
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project: dependencies 1`] = `
Set {
  "test/fixtures/mywasmbindgenlib/Cargo.toml",
  "test/fixtures/mywasmbindgenlib/src/lib.rs",
  "test/fixtures/wasmbindgen.js",
}
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project: errors 1`] = `
Array [
  "Error: Command failed: cargo build --message-format=json --target=wasm32-unknown-unknown --release
   Compiling mywasmbindgenlib v0.1.0 (test/fixtures/mywasmbindgenlib)
error: Could not compile \`mywasmbindgenlib\`.

To learn more, run the command again with --verbose.
",
  "error: aborting due to 2 previous errors

",
  "error[E0635]: unknown feature \`wasm_custom_section\`
 --> src/lib.rs:1:24
  |
1 | #![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  |                        ^^^^^^^^^^^^^^^^^^^

",
  "error[E0635]: unknown feature \`wasm_import_module\`
 --> src/lib.rs:1:45
  |
1 | #![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  |                                             ^^^^^^^^^^^^^^^^^^

",
]
`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project: failure 1`] = `"[object Object]"`;

exports[`rust-native-wasm-loader loads a wasm-bindgen project: warnings 1`] = `
Array [
  "warning: the feature \`proc_macro\` has been stable since 1.29.0 and no longer requires an attribute to enable
 --> src/lib.rs:1:12
  |
1 | #![feature(proc_macro, wasm_custom_section, wasm_import_module)]
  |            ^^^^^^^^^^
  |
  = note: #[warn(stable_features)] on by default

",
]
`;
